<%= call_hook(:view_issues_form_details_top, {:issue => @issue, :form => f}) %>
<div id="issue_descr_fields">
  <% if @issue.safe_attribute_names.include?('is_private') %>
      <p style="float:right; margin-right:1em;">
        <label class="inline" for="issue_is_private" id="issue_is_private_label"><%= f.check_box :is_private, :no_label => true %> <%= l(:field_is_private) %></label>
      </p>
  <% end %>

  <p>
    <% if !@issue.new_record? %>
<%= f.select :author_id, principals_options_for_select(@issue.assignable_users, @issue.author), :include_blank => false %>&nbsp;&nbsp;<%= link_to @issue.author, user_path(@issue.author), :target => "_blank" %>
    <% end %>
  </p>

  <p>
    <% if !@issue.new_record? && @issue.se_prenotazione %>
        <%= f.select :section_id, [[@issue.section.full_name, @issue.section_id]], :include_blank => false, :required => true, :size => 100, :title => l(:label_section) %>
    <% else %>
        <%= f.select :section_id, (Section.all_with_topsection.collect { |c| [c.full_name, c.id] }), :include_blank => false, :required => true, :size => 100, :title => l(:label_section) %>
    <% end %>
  </p>

  <p><%= f.select :tracker_id, @project.trackers.collect { |t| [t.name, t.id] }, :required => true %></p>
  <%= observe_field :issue_tracker_id, :url => {:action => :new, :project_id => @project, :id => @issue},
                    :update => :attributes,
                    :with => "Form.serialize('issue-form')" %>

  <p><%= f.text_area :subject,
                     :cols => 90,
                     :rows => (@issue.subject.blank? ? 2 : [[2, @issue.subject.length / 50].max, 20].min),
                     :accesskey => accesskey(:edit) %></p>    <%#	    :class => 'wiki-edit' %>
  <p><%= f.text_area :summary,
                     :cols => 105,
                     :rows => (@issue.summary.blank? ? 4 : [[4, @issue.summary.length / 50].max, 30].min),
                     :accesskey => accesskey(:edit) %></p>

  <div id="attributes" class="attributes">
    <%= render :partial => 'issues/attributes' %>
    <%#, :locals => {:project => @project, :issue => @issue}%>
  </div>



<% if !@issue.new_record? %>
  <p><b>
    <% if @issue.is_quesito? %>
      <%= l(:quesito_risposta_rapida, :num => @issue.quesito_news.id.to_s) %>
    <% else %>
      <%= l(:content_articolo) %>
    <% end %>
  </b></p>
      <div id="ck-box-issues" ><%= f.cktext_area :description , :height => 800,  :swf_params => {:assetable_type => 'Test', :assetable_id => 1} %></div>
<% end %>

</div>

<% if @issue.new_record? %>
    <p id="attachments_form"><%= label_tag('attachments[1][file]', l(:label_attachment_plural)) %><%= render :partial => 'attachments/form' %></p>
<% end %>

<% if @issue.new_record? && User.current.allowed_to?(:add_issue_watchers, @project) -%>
    <p id="watchers_form"><label><%= l(:label_issue_watchers) %></label>
      <% @issue.project.users.sort.each do |user| -%>
          <label class="floating"><%= check_box_tag 'issue[watcher_user_ids][]', user.id, @issue.watched_by?(user) %> <%= h user %></label>
      <% end -%>
    </p>
<% end %>

<%= call_hook(:view_issues_form_details_bottom, {:issue => @issue, :form => f}) %>
